apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - port: 5000
      protocol: TCP
      targetPort: 5000
  sessionAffinity: None
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: backend
  name: backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/chanbengz/peach-backend:latest
          imagePullPolicy: Always
          resources: {}
          env:
            - name: ENVNAME
              value: "k3s"
            - name: DASHSCOPE_API_KEY
              value: "REDACTED"
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - name: backend-data
              mountPath: /app/data
      restartPolicy: Always
      volumes:
        - name: backend-data
          persistentVolumeClaim:
            claimName: backend-pv-claim

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: backend-acc
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["*"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: backend-acc
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
roleRef:
  kind: ClusterRole
  name: backend-acc
  apiGroup: rbac.authorization.k8s.io
